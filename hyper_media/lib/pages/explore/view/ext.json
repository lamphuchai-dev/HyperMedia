{
  "hashCode": 11666449,
  "id": 1,
  "metadata": {
    "author": "hyper_media",
    "description": "Đọc truyện trên trang Net Truyện",
    "hashCode": 462828564,
    "icon": "iVBORw0KGgoAAAANSUhEUgAAAGsAAABqCAYAAAC746+pAAAACXBIWXMAAAsTAAALEwEAmpwYAAAFwmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxNDIgNzkuMTYwOTI0LCAyMDE3LzA3LzEzLTAxOjA2OjM5ICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2JlLmNvbS9waG90b3Nob3AvMS4wLyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgKFdpbmRvd3MpIiB4bXA6Q3JlYXRlRGF0ZT0iMjAxOS0wNi0zMFQyMjo1NTowNyswNzowMCIgeG1wOk1ldGFkYXRhRGF0ZT0iMjAxOS0wNi0zMFQyMjo1NTowNyswNzowMCIgeG1wOk1vZGlmeURhdGU9IjIwMTktMDYtMzBUMjI6NTU6MDcrMDc6MDAiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NTViMjhkOTMtMWJkOS00NDRhLWI5NmMtZDYwZTUxYzMyNWNmIiB4bXBNTTpEb2N1bWVudElEPSJhZG9iZTpkb2NpZDpwaG90b3Nob3A6NDRiNWQ3MTQtZjMyYy00NDQ5LTljZmEtODRk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",
    "language": "javascript",
    "locale": "vi_VN",
    "name": "Net Truyện",
    "path": "https://raw.githubusercontent.com/lamphuchai-dev/hyper_media/main/ext-book/extensions/net_truyen_tmp/extension.zip",
    "regexp": "(www.)?(nettruyenus).(com)",
    "slug": "net_truyen_tmp",
    "source": "https://www.nettruyenus.com",
    "tag": null,
    "type": "comic",
    "version": 1
  },
  "script": {
    "chapter": "async function chapter(url) {\n  const res = await Extension.request(url);\n  const listEl = await Extension.querySelectorAll(res, \"div.page-chapter img\");\n  let result = [];\n  for (const element of listEl) {\n    var image = await Extension.getAttributeText(element.content, \"img\", \"src\");\n    if (image == null) {\n      image = await Extension.getAttributeText(\n        element.content,\n        \"img\",\n        \"data-original\"\n      );\n    }\n    if (image && image.startsWith(\"//\")) {\n      image = \"https:\" + image;\n    }\n    result.push(image);\n  }\n  return result;\n}\n",
    "chapters": "async function chapters(bookUrl) {\n  const res = await Extension.request(bookUrl);\n  const listEl = await Extension.querySelectorAll(res, \"div.list-chapter ul a\");\n  const chapters = [];\n\n  for (var index = 0; index < listEl.length; index++) {\n    const el = listEl[index].content;\n    const url = await Extension.getAttributeText(el, \"a\", \"href\");\n    const title = await Extension.querySelector(el, \"a\").text;\n    chapters.push({\n      title,\n      url,\n      bookUrl,\n      index: listEl.length - 1 - index,\n    });\n  }\n  return chapters;\n}\n",
    "detail": "async function detail(bookUrl) {\n  const res = await Extension.request(bookUrl);\n\n  const detailEl = await Extension.querySelector(res, \"article.item-detail\");\n  const name = await Extension.querySelector(\n    detailEl.content,\n    \"h1.title-detail\"\n  ).text;\n  var cover = await Extension.getAttributeText(\n    res,\n    \"div.detail-info img\",\n    \"data-original\"\n  );\n  if (cover == null) {\n    cover = await Extension.getAttributeText(res, \"div.detail-info img\", \"src\");\n  }\n  if (cover && cover.startsWith(\"//\")) {\n    cover = \"https:\" + cover;\n  }\n\n  const authorRow = await Extension.querySelectorAll(\n    detailEl.content,\n    \"li.author p\"\n  );\n  var author = \"\";\n  if (authorRow.length == 2) {\n    author = await Extension.querySelector(authorRow[1].content, \"p\").text;\n  }\n\n  const statusRow = await Extension.querySelectorAll(\n    detailEl.content,\n    \"li.status p\"\n  );\n\n  var bookStatus = \"\";\n  if (statusRow.length == 2) {\n    bookStatus = await Extension.querySelector(statusRow[1].content, \"p\").text;\n  }\n\n  const description = await Extension.querySelector(\n    detailEl.content,\n    \"div.detail-content p\"\n  ).text;\n\n  const totalChapters = (\n    await Extension.querySelectorAll(res, \"div.list-chapter ul a\")\n  ).length;\n\n  let genres = [];\n  const genresEl = await Extension.querySelectorAll(\n    detailEl.content,\n    \"li.kind.row p\"\n  );\n\n  if (genresEl.length == 2) {\n    const lstElm = await Extension.querySelectorAll(genresEl[1].content, \"a\");\n    for (var el of lstElm) {\n      genres.push({\n        url: await Extension.getAttributeText(el.content, \"a\", \"href\"),\n        title: await Extension.querySelector(el.content, \"a\").text,\n      });\n    }\n  }\n\n  return {\n    name,\n    cover,\n    bookStatus,\n    bookUrl,\n    author,\n    description,\n    totalChapters,\n    genres,\n  };\n}\n",
    "genre": "async function genre(url) {\n  const res = await Extension.request(url + \"/tim-truyen\");\n  const listEl = await Extension.querySelectorAll(\n    res,\n    'select[class=\"form-control changed-redirect\"] option'\n  );\n\n  let result = [];\n  for (const element of listEl) {\n    result.push({\n      title: await Extension.querySelector(element.content, \"option\").text,\n      url: await Extension.getAttributeText(element.content, \"option\", \"value\"),\n    });\n  }\n  return result;\n}\n",
    "hashCode": 455356421,
    "home": "async function home(url, page) {\n  const res = await Extension.request(url, {\n    queryParameters: { page: page ?? 1 },\n  });\n  const list = await Extension.querySelectorAll(res, \"div.items div.item\");\n  const result = [];\n\n  for (const item of list) {\n    const html = item.content;\n    var cover = await Extension.getAttributeText(html, \"img\", \"data-original\");\n    if (cover == null) {\n      cover = await Extension.getAttributeText(html, \"img\", \"src\");\n    }\n    if (cover && cover.startsWith(\"//\")) {\n      cover = \"https:\" + cover;\n    }\n\n    result.push({\n      name: await Extension.querySelector(html, \"h3 a\").text,\n      bookUrl: await Extension.getAttributeText(html, \"h3 a\", \"href\"),\n      description: await Extension.querySelector(html, \".comic-item li a\").text,\n      cover,\n    });\n  }\n  return result;\n}\n",
    "search": "async function search(url, kw, page) {\n  const res = await Extension.request(url + \"/tim-truyen\", {\n    queryParameters: { page: page, keyword: kw },\n  });\n\n  const list = await Extension.querySelectorAll(res, \"div.items div.item\");\n  const result = [];\n  for (const item of list) {\n    var html = item.content;\n    var cover = await Extension.getAttributeText(html, \"img\", \"src\");\n    if (cover && cover.startsWith(\"//\")) {\n      cover = \"https:\" + cover;\n    }\n    result.push({\n      name: await Extension.querySelector(html, \"h3 a\").text,\n      bookUrl: await Extension.getAttributeText(html, \"h3 a\", \"href\"),\n      description: await Extension.querySelector(html, \".comic-item li a\").text,\n      cover,\n    });\n  }\n  return result;\n}\n",
    "tabs": "async function tabs() {\n  return [\n    {\n      title: \"Mới cập nhật\",\n      url: \"/tim-truyen\",\n    },\n    {\n      title: \"Truyện mới\",\n      url: \"/tim-truyen?status=-1&sort=15\",\n    },\n    {\n      title: \"Top all\",\n      url: \"/tim-truyen?status=-1&sort=10\",\n    },\n    { title: \"Top tháng\", url: \"/tim-truyen?status=-1&sort=11\" },\n    { title: \"Top tuần\", url: \"/tim-truyen?status=-1&sort=12\" },\n    { title: \"Top ngày\", url: \"/tim-truyen?status=-1&sort=13\" },\n    { title: \"Theo dõi\", url: \"/tim-truyen?status=-1&sort=20\" },\n    { title: \"Bình luận\", url: \"/tim-truyen?status=-1&sort=25\" },\n    {\n      title: \"Truyện Full\",\n      url: \"/truyen-full\",\n    },\n    {\n      title: \"Tất cả - Số chapter\",\n      url: \"/tim-truyen?status=-1&sort=30\",\n    },\n    {\n      title: \"Truyện con trai\",\n      url: \"/truyen-con-trai\",\n    },\n    {\n      title: \"Truyện con gái\",\n      url: \"/truyen-con-gai\",\n    },\n  ];\n}\n"
  },
  "updateAt": 1699428083297096
}
